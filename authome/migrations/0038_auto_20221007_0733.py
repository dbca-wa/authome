# Generated by Django 3.2.12 on 2022-10-06 23:33

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('authome', '0037_alter_usergroup_groupid'),
    ]

    operations = [
        migrations.CreateModel(
            name='DebugLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logtime', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('lb_hash_key', models.CharField(db_index=True, editable=False, max_length=128, null=True)),
                ('clusterid', models.CharField(db_index=True, editable=False, max_length=32, null=True)),
                ('session_clusterid', models.CharField(db_index=True, editable=False, max_length=32, null=True)),
                ('session_key', models.CharField(db_index=True, editable=False, max_length=128, null=True)),
                ('source_session_cookie', models.CharField(editable=False, max_length=128, null=True)),
                ('target_session_cookie', models.CharField(editable=False, max_length=128, null=True)),
                ('email', models.CharField(db_index=True, editable=False, max_length=128, null=True)),
                ('request', models.CharField(db_index=True, editable=False, max_length=256, null=True)),
                ('category', models.PositiveSmallIntegerField(choices=[(10, 'Create cookie'), (11, 'Update cookie'), (12, 'Delete cookie'), (20, 'Upgrade session'), (21, 'Session already upgraded'), (22, 'Upgrade non-exist session'), (30, 'Migrate session'), (31, 'Session already migrated'), (32, 'Migrate non-exist session'), (40, 'Move session'), (41, 'Session already moved'), (42, 'Move non-exist session'), (50, 'Auth2 Cluster Not Available'), (201, 'LB key not match'), (202, 'Domain not match'), (210, 'Session cookie hacked'), (200, 'Error')], default=10)),
                ('useragent', models.CharField(editable=False, max_length=512, null=True)),
                ('message', models.TextField(editable=False, null=True)),
            ],
            options={
                'verbose_name_plural': 'Auth2 Logs',
            },
        ),
        migrations.AlterModelOptions(
            name='auth2cluster',
            options={'verbose_name_plural': '  Auth2 Clusters'},
        ),
        migrations.AlterModelOptions(
            name='customizableuserflow',
            options={'verbose_name_plural': '     Customizable Userflows'},
        ),
        migrations.AlterModelOptions(
            name='identityprovider',
            options={'verbose_name_plural': '    Identity Providers'},
        ),
        migrations.AlterModelOptions(
            name='normaluser',
            options={'verbose_name': 'User', 'verbose_name_plural': '           Users'},
        ),
        migrations.AlterModelOptions(
            name='normalusertoken',
            options={'verbose_name': 'System User', 'verbose_name_plural': '          User Tokens'},
        ),
        migrations.AlterModelOptions(
            name='systemuser',
            options={'verbose_name': 'System User', 'verbose_name_plural': '         System Users'},
        ),
        migrations.AlterModelOptions(
            name='systemusertoken',
            options={'verbose_name': 'System User', 'verbose_name_plural': '        System User Tokens'},
        ),
        migrations.AlterModelOptions(
            name='usergroup',
            options={'verbose_name_plural': '       User Groups'},
        ),
        migrations.AlterModelOptions(
            name='usergroupauthorization',
            options={'verbose_name_plural': '      User Group Authorizations'},
        ),
        migrations.AlterModelOptions(
            name='usertoken',
            options={'verbose_name_plural': '   Access Tokens'},
        ),
        migrations.AlterModelOptions(
            name='usertotp',
            options={'verbose_name_plural': '   User TOTPs'},
        ),
        migrations.CreateModel(
            name='TrafficReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clusterid', models.CharField(editable=False, max_length=32, null=True)),
                ('report_type', models.PositiveSmallIntegerField(choices=[(1, 'Daily Report'), (2, 'Weekly Report'), (3, 'Monthly Report')])),
                ('start_time', models.DateTimeField(db_index=True, editable=False)),
                ('end_time', models.DateTimeField(editable=False)),
                ('requests', models.PositiveIntegerField(default=0, editable=False)),
                ('total_time', models.FloatField(editable=False, null=True)),
                ('min_time', models.FloatField(editable=False, null=True)),
                ('max_time', models.FloatField(editable=False, null=True)),
                ('avg_time', models.FloatField(editable=False, null=True)),
                ('status', models.JSONField(editable=False, null=True)),
                ('get_remote_sessions', models.PositiveIntegerField(default=0, editable=False)),
                ('delete_remote_sessions', models.PositiveIntegerField(default=0, editable=False)),
                ('domains', models.JSONField(editable=False, null=True)),
                ('cluster', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authome.auth2cluster')),
            ],
            options={
                'verbose_name_plural': ' Traffic Report',
                'unique_together': {('clusterid', 'report_type', 'start_time')},
            },
        ),
        migrations.CreateModel(
            name='TrafficDataProcessStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clusterid', models.CharField(editable=False, max_length=32, null=True, unique=True)),
                ('last_saved_batchid', models.DateTimeField(editable=False, null=True)),
                ('last_processed_batchid', models.DateTimeField(editable=False, null=True)),
                ('disabled', models.BooleanField(default=False)),
                ('cluster', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authome.auth2cluster')),
            ],
        ),
        migrations.CreateModel(
            name='TrafficData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clusterid', models.CharField(editable=False, max_length=32, null=True)),
                ('servers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=512), editable=False, null=True, size=None)),
                ('start_time', models.DateTimeField(db_index=True, editable=False)),
                ('end_time', models.DateTimeField(editable=False)),
                ('batchid', models.DateTimeField(db_index=True, editable=False)),
                ('requests', models.PositiveIntegerField(default=0, editable=False)),
                ('total_time', models.FloatField(editable=False, null=True)),
                ('min_time', models.FloatField(editable=False, null=True)),
                ('max_time', models.FloatField(editable=False, null=True)),
                ('avg_time', models.FloatField(editable=False, null=True)),
                ('get_remote_sessions', models.PositiveIntegerField(default=0, editable=False)),
                ('delete_remote_sessions', models.PositiveIntegerField(default=0, editable=False)),
                ('status', models.JSONField(editable=False, null=True)),
                ('domains', models.JSONField(editable=False, null=True)),
                ('cluster', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authome.auth2cluster')),
            ],
            options={
                'verbose_name_plural': ' Traffic Data',
                'unique_together': {('clusterid', 'start_time', 'end_time', 'batchid')},
            },
        ),
        migrations.CreateModel(
            name='SSOMethodTrafficReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sso_method', models.CharField(editable=False, max_length=32)),
                ('requests', models.PositiveIntegerField(default=0, editable=False)),
                ('total_time', models.FloatField(editable=False, null=True)),
                ('min_time', models.FloatField(editable=False, null=True)),
                ('max_time', models.FloatField(editable=False, null=True)),
                ('avg_time', models.FloatField(editable=False, null=True)),
                ('status', models.JSONField(editable=False, null=True)),
                ('domains', models.JSONField(editable=False, null=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authome.trafficreport')),
            ],
            options={
                'verbose_name_plural': 'auth2 sso method traffic report',
                'unique_together': {('report', 'sso_method')},
            },
        ),
        migrations.CreateModel(
            name='SSOMethodTrafficData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sso_method', models.CharField(editable=False, max_length=32)),
                ('requests', models.PositiveIntegerField(default=0, editable=False)),
                ('total_time', models.FloatField(editable=False, null=True)),
                ('min_time', models.FloatField(editable=False, null=True)),
                ('max_time', models.FloatField(editable=False, null=True)),
                ('avg_time', models.FloatField(editable=False, null=True)),
                ('status', models.JSONField(editable=False, null=True)),
                ('domains', models.JSONField(editable=False, null=True)),
                ('traffic_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authome.trafficdata')),
            ],
            options={
                'verbose_name_plural': 'auth2 sso method traffic data',
                'unique_together': {('traffic_data', 'sso_method')},
            },
        ),
    ]
